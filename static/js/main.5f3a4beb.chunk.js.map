{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","position","setPosition","frameWight","width","translateImg","transform","transition","className","style","map","image","index","isVisible","itemClass","classNames","src","alt","type","onClick","currentPosition","prevPosition","Math","max","length","icon","faAngleLeft","nextPosition","min","faAngleRight","App","state","handleChange","e","target","name","value","checked","setState","prevState","this","htmlFor","id","onChange","title","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iTAeaA,EAA4B,SAAC,GAOnC,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,KACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,SAEA,EAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,CACjBC,MAAOR,EAAYC,GAGfQ,EAAe,CACnBC,UAAU,eAAD,OAAiBL,EAAWJ,EAA5B,OACTU,WAAW,aAAD,OAAeT,EAAf,OAuBZ,OACE,sBACEU,UAAU,WADZ,UAGE,qBACEA,UAAU,oBACVC,MAAON,EAFT,SAIE,oBACEK,UAAU,iBACVC,MAAOJ,EAFT,SAIGX,EAAOgB,KAAI,SAACC,EAAeC,GAC1B,IAAMC,EAAYD,GAASX,GAAYW,EAAQX,EAAWL,EAEpDkB,EAAYC,IAAW,iBAC3B,CAAE,0BAA2BF,IAE/B,OACE,oBAGEL,UAAWM,EAHb,SAKE,qBACEE,IAAKL,EACLM,IAAG,gBAAWL,EAAQ,GACtBR,MAAOP,KAPJc,UAef,sBACEH,UAAU,2BACVC,MAAO,CACLL,MAAM,GAAD,OAAKR,EAAYC,EAAY,IAA7B,MACLS,UAAU,cAAD,OAAgB,GAAhB,QAA0B,IAA1B,OAJb,UAOE,wBACEY,KAAK,SACL,UAAQ,OACRV,UAAU,0CACVW,QAxDgB,WACtBjB,GAAY,SAAAkB,GACV,IAAMC,EAAeC,KAAKC,IAAIH,EAAkBzB,EAAM,GAEtD,OAAOI,GAAYsB,IAAiBD,EAChC1B,EAAO8B,OAAS5B,EAChByB,MA8CF,SAME,cAAC,IAAD,CAAiBI,KAAMC,QAGzB,wBACER,KAAK,SACL,UAAQ,OACRV,UAAU,2CACVW,QA3EgB,WACtBjB,GAAY,SAAAkB,GACV,IAAMO,EAAeL,KAAKM,IACxBR,EAAkBzB,EAAMD,EAAO8B,OAAS5B,GAG1C,OAAOG,GAAY4B,IAAiBP,EAAkB,EAAIO,MAiExD,SAME,cAAC,IAAD,CAAiBF,KAAMI,eClG3BC,E,4MACJC,MAAQ,CACNrC,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,IACnBC,UAAU,G,EAGZiC,aAAe,SAACC,GACd,MAEIA,EAAEC,OADJC,EADF,EACEA,KAAMC,EADR,EACQA,MAAOlB,EADf,EACeA,KAAMmB,EADrB,EACqBA,QAGrB,EAAKC,UAAS,SAAAC,GAAS,kCAClBA,GADkB,kBAEpBJ,EAAgB,aAATjB,EAAsBmB,EAAUD,Q,4CAI5C,WACE,MAOII,KAAKT,MANPrC,EADF,EACEA,OACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,kBACAC,EANF,EAMEA,SAGF,OACE,sBAAKS,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAa,UAAQ,QAAnC,0BAEG,IACAd,EAAO8B,OACP,IAJH,YAQA,cAAC,EAAD,CACE9B,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,SAAUA,IAGZ,uBAAMS,UAAU,YAAhB,UACE,wBACEiC,QAAQ,SACRjC,UAAU,aAFZ,uBAME,uBACEA,UAAU,aACVkC,GAAG,SACHxB,KAAK,SACLiB,KAAK,YACLC,MAAOI,KAAKT,MAAMlC,UAClB8C,SAAUH,KAAKR,kBAInB,wBACES,QAAQ,UACRjC,UAAU,aAFZ,uBAME,uBACEA,UAAU,aACVkC,GAAG,UACHxB,KAAK,SACLiB,KAAK,YACLP,IAAK,EACLL,IAAK,GACLa,MAAOI,KAAKT,MAAMnC,UAClB+C,SAAUH,KAAKR,kBAInB,wBACES,QAAQ,SACRjC,UAAU,aAFZ,iBAME,uBACEA,UAAU,aACVkC,GAAG,SACHxB,KAAK,SACLU,IAAK,EACLO,KAAK,OACLC,MAAOI,KAAKT,MAAMpC,KAClBgD,SAAUH,KAAKR,kBAInB,wBACES,QAAQ,cACRG,MAAM,OACNpC,UAAU,aAHZ,+BAOE,uBACEA,UAAU,aACVkC,GAAG,cACHxB,KAAK,SACLiB,KAAK,oBACLC,MAAOI,KAAKT,MAAMjC,kBAClB6C,SAAUH,KAAKR,kBAGnB,wBAAOS,QAAQ,WAAf,qBAIE,uBACEC,GAAG,WACHxB,KAAK,WACLiB,KAAK,WACLE,QAASG,KAAKT,MAAMhC,SACpB4C,SAAUH,KAAKR,4B,GA1IXa,IAAMC,WAmJThB,IC7JfiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5f3a4beb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons';\nimport classNames from 'classnames';\n\ntype Props = {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [position, setPosition] = useState(0);\n\n  const frameWight = {\n    width: frameSize * itemWidth,\n  };\n\n  const translateImg = {\n    transform: `translateX(-${position * itemWidth}px)`,\n    transition: `transform ${animationDuration}ms`,\n  };\n\n  const handleNextClick = () => {\n    setPosition(currentPosition => {\n      const nextPosition = Math.min(\n        currentPosition + step, images.length - frameSize,\n      );\n\n      return infinite && nextPosition === currentPosition ? 0 : nextPosition;\n    });\n  };\n\n  const handlePrevClick = () => {\n    setPosition(currentPosition => {\n      const prevPosition = Math.max(currentPosition - step, 0);\n\n      return infinite && prevPosition === currentPosition\n        ? images.length - frameSize\n        : prevPosition;\n    });\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n    >\n      <div\n        className=\"Carousel__wrapper\"\n        style={frameWight}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={translateImg}\n        >\n          {images.map((image: string, index: number) => {\n            const isVisible = index >= position && index < position + frameSize;\n\n            const itemClass = classNames('Carousel__item',\n              { 'Carousel__item--visible': isVisible });\n\n            return (\n              <li\n                key={image}\n                // className=\"Carousel__item\"\n                className={itemClass}\n              >\n                <img\n                  src={image}\n                  alt={`Slide ${index + 1}`}\n                  width={itemWidth}\n                />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div\n        className=\"Carousel__button-wrapper\"\n        style={{\n          width: `${frameSize * itemWidth + 100}px`,\n          transform: `translate(-${50}px, -${100}%)`,\n        }}\n      >\n        <button\n          type=\"button\"\n          data-cy=\"prev\"\n          className=\"Carousel__button Carousel__button--left\"\n          onClick={handlePrevClick}\n        >\n          <FontAwesomeIcon icon={faAngleLeft} />\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className=\"Carousel__button Carousel__button--right\"\n          onClick={handleNextClick}\n        >\n          <FontAwesomeIcon icon={faAngleRight} />\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name, value, type, checked,\n    } = e.target;\n\n    this.setState(prevState => ({\n      ...prevState,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\" data-cy=\"title\">\n          Carousel with\n          {' '}\n          {images.length}\n          {' '}\n          images\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"App__form\">\n          <label\n            htmlFor=\"itemId\"\n            className=\"App__label\"\n          >\n            Item width\n\n            <input\n              className=\"App__input\"\n              id=\"itemId\"\n              type=\"number\"\n              name=\"itemWidth\"\n              value={this.state.itemWidth}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label\n            htmlFor=\"frameId\"\n            className=\"App__label\"\n          >\n            Frame size\n\n            <input\n              className=\"App__input\"\n              id=\"frameId\"\n              type=\"number\"\n              name=\"frameSize\"\n              min={1}\n              max={10}\n              value={this.state.frameSize}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label\n            htmlFor=\"stepId\"\n            className=\"App__label\"\n          >\n            Step\n\n            <input\n              className=\"App__input\"\n              id=\"stepId\"\n              type=\"number\"\n              min={1}\n              name=\"step\"\n              value={this.state.step}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animationId\"\n            title=\"name\"\n            className=\"App__label\"\n          >\n            Animation duration\n\n            <input\n              className=\"App__input\"\n              id=\"animationId\"\n              type=\"number\"\n              name=\"animationDuration\"\n              value={this.state.animationDuration}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"infinite\">\n\n            Infinite\n\n            <input\n              id=\"infinite\"\n              type=\"checkbox\"\n              name=\"infinite\"\n              checked={this.state.infinite}\n              onChange={this.handleChange}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}